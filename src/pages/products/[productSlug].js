import Head from 'next/head'

import Layout from '@components/Layout'
import Header from '@components/Header'
import Container from '@components/Container'
import Button from '@components/Button'

import { ApolloClient, InMemoryCache, gql } from '@apollo/client'
import Image from 'next/image'

export default function Product({ productData }) {
    return (
        <Layout>
            <Head>
                <title>Product Name</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
            </Head>

            <Container></Container>
        </Layout>
    )
}

export async function getStaticProps({ params }) {
    const client = new ApolloClient({
        uri: 'https://api-ap-south-1.graphcms.com/v2/cl24nx7vp6mqb01xtampb0iwb/master',
        cache: new InMemoryCache(),
    })

    const cmsData = await client.query({
        query: gql`
            query SingleProduct($slug: String) {
                product(where: { slug: $slug }) {
                    slug
                    name
                    price
                    description
                    id
                    images {
                        url
                    }
                }
            }
        `,
        variables: {
            slug: params.productSlug,
        },
    })

    const productData = cmsData.data.product

    return {
        props: {
            productData,
        },
    }
}

export async function getStaticPaths() {
    const client = new ApolloClient({
        uri: 'https://api-ap-south-1.graphcms.com/v2/cl24nx7vp6mqb01xtampb0iwb/master',
        cache: new InMemoryCache(),
    })

    const cmsData = await client.query({
        query: gql`
            query ProductQuery {
                products {
                    id
                    name
                    price
                    images {
                        url
                        id
                        fileName
                    }
                    slug
                }
            }
        `,
    })

    const paths = cmsData.data.products.map((product) => {
        return {
            params: {
                productSlug: product.slug,
            },
        }
    })

    return {
        paths,
        fallback: true, // false or 'blocking'
    }
}
